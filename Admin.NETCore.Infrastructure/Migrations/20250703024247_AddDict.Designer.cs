// <auto-generated />
using System;
using Admin.NETCore.Infrastructure.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Admin.NETCore.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250703024247_AddDict")]
    partial class AddDict
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Admin.NETCore.Infrastructure.DB.Entities.DictItem", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<int>("Builtin")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CreateBy");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("CreateTime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("DictTypeCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("所属的字典类型");

                    b.Property<string>("DictTypeId")
                        .HasColumnType("varchar(36)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("字典项名称");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("这是备注");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("UpdateBy");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("UpdateDate")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("字典项值");

                    b.HasKey("Id");

                    b.HasIndex("DictTypeId");

                    b.ToTable("DictItem", (string)null);
                });

            modelBuilder.Entity("Admin.NETCore.Infrastructure.DB.Entities.DictType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<int>("Builtin")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("字典编码");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CreateBy");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("CreateTime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("字典名称");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("这是备注");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("UpdateBy");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("UpdateDate")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.HasKey("Id");

                    b.ToTable("DictType", (string)null);
                });

            modelBuilder.Entity("Admin.NETCore.Infrastructure.DB.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<int>("Builtin")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("角色编码");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CreateBy");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("CreateTime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("角色名称");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("这是备注");

                    b.Property<int>("Status")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("UpdateBy");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("UpdateDate")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("Admin.NETCore.Infrastructure.DB.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasAnnotation("Age", "^[1-9][0-9]*$");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CreateBy");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("CreateTime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("DeptId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("Money")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasComment("姓名");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("这是备注");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("char(11)")
                        .IsFixedLength()
                        .HasAnnotation("PhoneNumber", "^[0-9]{11}$");

                    b.Property<int>("Status")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("UpdateBy");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("UpdateDate")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<DateTime>("UserExpiryDate")
                        .HasMaxLength(10)
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserNumber")
                        .HasMaxLength(8)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Admin.NETCore.Infrastructure.DB.Entities.UserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<int>("AssignStatus")
                        .HasColumnType("int")
                        .HasComment("分配状态(1：已分配，0：未分配)");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CreateBy");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("CreateTime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("UpdateBy");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("UpdateDate")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("Admin.NETCore.Infrastructure.DB.Entities.DictItem", b =>
                {
                    b.HasOne("Admin.NETCore.Infrastructure.DB.Entities.DictType", "DictType")
                        .WithMany()
                        .HasForeignKey("DictTypeId");

                    b.Navigation("DictType");
                });

            modelBuilder.Entity("Admin.NETCore.Infrastructure.DB.Entities.UserRole", b =>
                {
                    b.HasOne("Admin.NETCore.Infrastructure.DB.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Admin.NETCore.Infrastructure.DB.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Admin.NETCore.Infrastructure.DB.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Admin.NETCore.Infrastructure.DB.Entities.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
